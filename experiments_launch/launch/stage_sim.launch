<launch>

<!-- tell to roscore that we will run in simulation-->
<param name="/use_sim_time" value="true"/>

<!-- start stage simulator -->
<node pkg="stage_ros" type="stageros" name="stageros" args="$(find experiments_launch)/world/stage_pioneer.world" >
<remap from="/base_scan" to="/scan" />
</node>

<!-- Laser noise node to add some extra noise-->
  <node respawn="true" pkg="laser_noise" type="laser_noise_node" name="laser_noise" > 
       <remap from="/scan_with_noise" to="/scan_final" />
  </node>

<!-- joy node for aka joystick drivers-->
  <node respawn="true" pkg="joy" type="joy_node" name="joy_node" >
    <param name="dev" type="string" value="/dev/input/js1" /> <!-- change this /jsX depending on your joystick port -->
    <param name="deadzone" value="0.15" />
  </node> 

<!-- teleop node -->
<node pkg="mixed_initiative_teleop" type="mixed_initiative_teleop" name="mi_teleop" output="screen"/>

<!-- cmd mixer for choosing autonomy mode or e.g. emergency stop if nav doesnt work good. (buttons for teleoperation - stop - autonomy mode) -->
<!-- In xbox controller Y =  teleop , A = auto , B = stop (in any case) -->
<node pkg="mixed_initiative_controller" type="mixed_initiative_controller" name="mi_controller" output="screen"/>


<!-- Gmapping SLAM -->
<!--include file="$(find experiments_launch)/launch/slam_gmapping.launch"/-->


<!-- Navigation stuff / move_base -->
<include file="$(find experiments_launch)/launch/move_base.launch"/>


<!-- mode and status visualising node -->
<node pkg="status_publisher" type="status_publisher" name="status_publisher" output="screen"/>

<node pkg="rviz" type="rviz" name="rviz" 
    args="-d $(find experiments_launch)/rviz_cfg/rviz_cfg.rviz"/>


<!-- MAP server to load the predefined map -->
  <arg name="map_file" default="$(find experiments_launch)/world/map.yaml" />

  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" >
    <remap from="/map" to="/map" />
  </node>

<include file="$(find experiments_launch)/launch/amcl.launch"/>

</launch>
